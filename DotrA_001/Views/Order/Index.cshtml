@model DotrA_001.Models.MemderOrderViewModel
@Html.Partial("_Topimage")

@{
    ViewBag.Title = "結帳";

    var cart = DotrA_001.Models.Operation.GetCurrentCart();
}

<h3>結帳</h3>

@* 列出購物車內商品讓使用者作最後確認 *@
<div class="container">
    <table class="table"rules=none>
        <thead>
        <tr>
            <td>商品圖</td>
            <td>名稱</td>
            <td>售價</td>
            <td>數量</td>
            <td>小計</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var pd in cart) /* 使用foreach將所有商品列出 */
            {
                <tr>
                    <td><img src="@pd.Picture" width="50" height="50" /></td>
                    <td>@pd.ProductName</td>
                    <td>@pd.Price</td>
                    <td>@pd.Quantity</td>
                    <td>@pd.Total</td>
                </tr>
            }
            <tr id="ordertotal"><td colspan="3"></td><td>總計</td><td id="total">@cart.GetTotal</td></tr>
        </tbody>
    </table>
</div>
@* 讓使用者填入寄送資訊 *@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal text-center">
        <h3 class="mb-2 billing-heading">收件人地址</h3>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RecipientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="">
                @Html.EditorFor(model => model.RecipientName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipientName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="">
                @Html.EditorFor(model => model.RecipientAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipientAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipientPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="">
                @Html.EditorFor(model => model.RecipientPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecipientPhone, "", new { @class = "text-danger" })
            </div>
        </div>

   
        <div class="form-inline justify-content-center"role="form">
            <div class="form-group" >
                @Html.LabelFor(model => model.ShipperID, "寄貨方式：", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("ShipperID", (SelectList)ViewBag.ShipperID, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShipperID, "", new { @class = "text-danger" })
                </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PaymentID, "付款方式：", htmlAttributes: new { @class = "control-label" })
                @Html.DropDownList("PaymentID", (SelectList)ViewBag.PaymentID, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PaymentID, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                <div class="">
                    <input type="submit" value="立即付款" class="btn btn-default" />
                </div>
            </div>
        </div>
}
@section topCSS{
    <style>
        /*會員修改*/
        h3 {
            font-family: 'Dancing Script', cursive;
            text-align:center;
        }
        label {
            font-family: 'Dancing Script', cursive;
        }
        /*table*/
        thead{
            background-color:#ecf0f1;
        }
        #total  {
            color:red;
            font-size:20px;
            text-decoration:underline;
        }
     
    </style>
}
@section endJS{
    <script>
        //console.log($('.mousedown'));
        $(function () {
            $('#mousedown').click(function () {
                let btn = $('#myDIV').css('display');
                if (btn === 'none') {
                    $('#mymousedown-ion').removeClass();
                    $('#mymousedown-ion').addClass('ion-ios-arrow-up');
                    $('#mymousedown-wheel').css('-webkit-animation', '1.6s ease infinite wheel-up-down');
                    $('#mymousedown-wheel').css('animation', '1.6s ease infinite wheel-up-down');
                    $('#myDIV').css('display', 'block');
                } else {
                    $('#mymousedown-ion').removeClass();
                    $('#mymousedown-ion').addClass('ion-ios-arrow-down');
                    $('#mymousedown-wheel').css('-webkit-animation', '1.6s ease infinite wheel-up-down1');
                    $('#mymousedown-wheel').css('animation', '1.6s ease infinite wheel-up-down1');
                    $('#myDIV').css('display', 'none');
                }
            });
        });
    </script>
}